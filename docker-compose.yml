# docker-compose.yml
services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      # Port for your NestJS application to connect
      - '9092:9092'
    environment:
      # Network Configuration
      - KAFKA_CFG_LISTENERS=INTERNAL://:9093,EXTERNAL://:9092,CONTROLLER://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      
      # KRaft Configuration (no Zookeeper)
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9094
    # NEW: Define a healthcheck to verify when Kafka is truly ready.
    # This command attempts to list topics, which will only succeed when the broker is active.
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9093", "--list"]
      interval: 10s
      timeout: 5s
      retries: 15
      start_period: 20s # Give the broker some initial time to start up before the first check.

  kafka-setup:
    image: 'bitnami/kafka:latest'
    # UPDATED: This now also waits for the kafka service to be healthy.
    # While the internal script also waits, this is good practice.
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Kafka is healthy, creating the topic...' &&
        kafka-topics.sh --bootstrap-server kafka:9093 --create --if-not-exists --topic avisos-criados --partitions 1 --replication-factor 1 &&
        echo 'Topic created successfully.'
      "

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    # UPDATED: Make this service wait for the 'kafka' service to pass its healthcheck.
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - '8080:8080'
    environment:
      # This configuration remains the same.
      KAFKA_BROKERS: "kafka:9093"